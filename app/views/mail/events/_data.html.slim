- status ||= nil

table.data cellpadding=0
  - if status == :reminder && !event.should_finish?
    tr
      th = translate('mail.event.next_date')
      td
        = event.next_recurrence_at&.to_s(:day)
  tr
    th = translate('mail.event.location')
    td = event.address
  tr
    th = translate('mail.event.timing')
    td = event.recurrence_in_words
  - if status == :created
    tr
      th = translate('mail.event.start_date')
      td = event.recurrence.starts_at.to_date.to_s(:long)
  tr
    th = translate('mail.event.category')
    td = event.category_name
  - if event.contact_info['phone_number']
    tr
      th = translate_attribute(event, 'contact_info.phone_number')
      td #{event.contact_info['phone_name']} (#{event.contact_info['phone_number']})
  - if event.contact_info['email_address']
    tr
      th = translate_attribute(event, 'contact_info.email_address')
      td = event.contact_info['email_address']
  tr
    th = translate('mail.event.manager')
    td
      - manager = event.manager
      = mail_to manager.email, manager.name
  - if status == :created
    tr
      th = translate('mail.event.created_by')
      td
        - creator = event.audits.last.user
        = creator ? mail_to(creator.email, creator.name) : "System"
  - elsif %i[needs_review needs_urgent_review expired].include?(status)
    tr
      th = translate('mail.event.updated_at')
      td = event.updated_at.to_date.to_s(:long)
