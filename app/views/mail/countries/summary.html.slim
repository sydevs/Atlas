
- content_for :preview do
  = translate('mail.country.summary.preview', country: @country.label)
  '  
  - @stats.each do |key, value|
    ' #{translate(key, scope: 'mail.summary.stats')}: #{value}. 

h2
  = translate('mail.country.summary.title')
  .subtitle = @country.label

= render 'mail/application/stats', stats: @stats, old_stats: @old_stats

table.data
  - if @new_regions.present? || @new_areas.present?
    tr
      th = translate('mail.summary.data.new_places')
      td
        - @new_regions.each do |region|
          div
            = link_to RegionDecorator.get_name(region.province_code, region.country.country_code), email_login(cms_region_url(region))
        - @new_areas.each do |area|
          div
            = link_to area.name, email_login(cms_area_url(area))
  - if @new_region_managers.present? || @new_area_managers.present?
    tr
      th = translate('mail.summary.data.new_managers')
      td
        - @new_region_managers.each do |managed_record|
          - manager = managed_record.manager
          - record = managed_record.record
          div
            = link_to manager.name, email_login(cms_manager_url(manager))
            - if record.is_a?(Region)
              |  (#{RegionDecorator.get_name(record.province_code, record.country.country_code)})
            - else
              |  (#{record.name})
              
        - @new_area_managers.each do |managed_record|
          - manager = managed_record.manager
          - record = managed_record.record
          div
            = link_to manager.name, email_login(cms_manager_url(manager))
            - if record.is_a?(Region)
              |  (#{RegionDecorator.get_name(record.province_code, record.country.country_code)})
            - else
              |  (#{record.name})
  
  - if @inactive_regions.present? || @inactive_areas.present?
    tr
      th = translate('mail.summary.data.inactive_regions')
      td
        - @inactive_regions.each do |region|
          div
            = link_to RegionDecorator.get_name(region.province_code, region.country.country_code), email_login(cms_region_url(region))
            |  (#{time_ago_in_words region.last_activity_on})
        - @inactive_areas.each do |area|
          div
            = link_to area.name, email_login(cms_area_url(area))
            |  (#{time_ago_in_words area.last_activity_on})

.actions
  a.button href=email_login(cms_country_url(@country))
    span = translate('mail.country.summary.view')