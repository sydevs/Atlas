
= f.input :published

/.field
  .ui.venue.search data-key=ENV.fetch('GOOGLE_PLACES_API_KEY') data-locale=I18n.locale data-country=f.object.country_code
    .ui.left.icon.input
      input.prompt type='text' placeholder=translate('cms.hints.geosearch.prompt')
      i.search.icon
  .hint = translate('cms.hints.geosearch.description')

.required.field
  = f.label :address
  .fields
    .sixteen.wide.field
      = f.input_field :name, placeholder: translate_attribute(Venue, :name)
  .fields
    .eleven.wide.field
      = f.input_field :street, placeholder: translate_attribute(Venue, :street)
    .five.wide.field
      = f.input_field :city, placeholder: translate_attribute(Venue, :city)
  .fields
    - if f.object.country_code.present? && !f.object.country.enable_province_management?
      .eleven.wide.field
        = f.hidden_field :country_code
        = f.input_field :country, as: :string, value: f.object.country.label, disabled: true
      .five.wide.field
        = f.input_field :postcode, placeholder: translate_attribute(Venue, :postcode)
    - else
      .six.wide.field
        - if f.object.province.present?
          = f.hidden_field :province_code
          = f.input_field :province, value: f.object.province_name, disabled: true
        - else
          - api_url = cms_manager_provinces_url(current_user, country_code: f.object.country_code, area: @context.is_a?(Area), format: :json)
          = f.input_field :province_code, collection: [f.object.province_name], data: { url: api_url, prompt: translate('cms.hints.province.prompt') }, class: 'ajax search'
      .seven.wide.field
        - if f.object.country_code.present?
          = f.hidden_field :country_code
          = f.input_field :country, as: :string, value: f.object.country.label, disabled: true
        - else
          - api_url = cms_manager_countries_url(current_user, area: @context.is_a?(Area), format: :json)
          = f.input_field :country_code, collection: [f.object.country_name], data: { url: api_url, prompt: translate_attribute(Venue, :country_code) }, class: 'ajax search'
      .three.wide.field
        = f.input_field :postcode, placeholder: translate_attribute(Venue, :postcode)

- if @context.is_a?(Area)
  #venue-map data-editable='true' data-bounds=@context.to_bounds(flexible: true).to_json
- else
  #venue-map data-editable='true'

.ui.map.message class="#{'hidden' if f.object.coordinates?}"
  .header = translate('cms.hints.venue.marker_not_set.title')
  p = translate('cms.hints.venue.marker_not_set.description')
.ui.negative.map.message.for-failure class='hidden'
  .header = translate('cms.hints.venue.cant_find_address.title')
  p = translate('cms.hints.venue.cant_find_address.description')
.ui.info.map.message.for-success class="#{'hidden' unless f.object.coordinates?}"
  .header = translate('cms.hints.venue.marker_set.title')
  p = translate('cms.hints.venue.marker_set.description')

button.lookup.ui.fluid.button type='button'
  i.search.icon
  = translate('cms.hints.venue.find_marker')

= f.hint translate('cms.hints.venue.location')
.ui.accordion.required.field id='venue_location' style=('display: none' unless current_user.administrator?)
  .title
    i.dropdown.icon
    = f.label translate('cms.hints.venue.manual_location'), required: true
  .content
    - if current_user.administrator?
      .three.fields
        .field = f.input_field :latitude, placeholder: translate_attribute(Venue, :latitude)
        .field = f.input_field :longitude, placeholder: translate_attribute(Venue, :longitude)
        .field = f.input_field :place_id, placeholder: translate_attribute(Venue, :place_id)
    - else
      .two.fields
        .field = f.input_field :latitude, placeholder: translate_attribute(Venue, :latitude)
        .field = f.input_field :longitude, placeholder: translate_attribute(Venue, :longitude)
        = f.hidden_field :place_id, placeholder: translate_attribute(Venue, :place_id)

- if f.object.errors.include?(:latitude)
  = f.error :latitude
- elsif f.object.errors.include?(:longitude)
  = f.error :longitude
