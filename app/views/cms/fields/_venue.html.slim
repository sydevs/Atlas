
= f.input :name, placeholder: f.object.street

.required.field
  = f.label :address
  .fields
    .eleven.wide.field
      = f.input_field :street, placeholder: 'Street Address'
    .five.wide.field
      = f.input_field :city, placeholder: 'City'
  .fields
    .six.wide.field
      - if f.object.province_code.present?
        = f.hidden_field :province_code
        = f.input_field :province, value: f.object.province.name, disabled: true
      - elsif f.object.country_code.present?
        = f.input_field :province_code, collection: ISO3166::Country[f.object.country_code].subdivisions.map { |k,v| [v['name'], k] }, prompt: 'Province / State / County', class: 'search'
    .seven.wide.field
      - if f.object.country_code.present?
        = f.hidden_field :country_code
        = f.input_field :country, as: :string, disabled: true
      - else
        = f.input_field :country_code, collection: ISO3166::Country.translations.map { |k,v| [v, k] }, prompt: 'Country', class: 'search'
    .three.wide.field
      = f.input_field :postcode, placeholder: 'Postal Code'

  = f.hidden_field :latitude
  = f.hidden_field :longitude

button.lookup.ui.fluid.button type='button'
  i.search.icon
  | Find Marker

#venue-map data-editable='true'
.ui.map.message class="#{'hidden' if f.object.coordinates?}"
  .header Map marker has not been set
  p You must press 'Find Marker' above to automatically detect the coordinates of the venue's address.
.ui.negative.map.message.for-failure class='hidden'
  .header Couldn't find address
  p The address you entered could not be found, try adding more information.
.ui.info.map.message.for-success class="#{'hidden' unless f.object.coordinates?}"
  .header Map marker set!
  p Make sure that the location shown on the map looks correct.
