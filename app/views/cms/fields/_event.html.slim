
- categories = Event.categories.map { |k, v| [translate_enum_value(Event, :category, k), k] }
- languages = I18nData.languages(I18n.locale).map { |k,v| [v, k] }

= f.input :published

= f.input :venue do
  .hint = @record.venue.name ? "#{@record.venue.name} - #{@record.venue.full_address}" : @record.venue.full_address

= f.input :name, placeholder: @record.category_name
= f.input :category, collection: categories
= f.input :description, as: :text, placeholder: @record.category_description
= f.input :room, hint: translate('cms.hints.event.room')
= f.input :languages, collection: languages, input_html: { multiple: true, class: 'search' }, hint: translate('cms.hints.event.language')

.ui.divider

= f.input :recurrence, collection: Event.recurrences.map {|k, v| ["Every #{k.humanize}", k]}

.two.fields
  = f.input :start_date, as: :string, wrapper: :semantic_date, wrapper_html: { class: 'start' }
  = f.input :end_date, as: :string, wrapper: :semantic_date, wrapper_html: { class: 'end' }, input_html: { placeholder: translate('cms.hints.never') }

.two.fields
  = f.input :start_time, wrapper: :semantic_time, wrapper_html: { class: 'start' }, input_html: { autocomplete: 'off' }
  = f.input :end_time, wrapper: :semantic_time, wrapper_html: { class: 'end' }, input_html: { autocomplete: 'off', placeholder: translate('cms.hints.unspecified') }
