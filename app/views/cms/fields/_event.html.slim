- allow = policy(@record)

- if @record.category.present?
  = f.input :published
  = f.input :category, as: :hidden
  = f.input :type, as: :hidden

  = f.input :custom_name, placeholder: @record.category_label, hint: translate('cms.hints.event.custom_name')

  = f.input :description do 
    .hint = translate('cms.hints.event.description', min: 40, max: 600)
    .hint
      strong.js-character-count data={ for: 'event_description', min: 40, max: 600 } = @record.description&.length || 0
      = translate('cms.hints.event.description_count', min: 40, max: 600)
    = f.input_field :description, as: :text, placeholder: @record.category_description do 

  .ui.small.dividing.violet.header = translate('cms.forms.event.details')
  - if @record.online?
    = f.input :online_url, hint: translate('cms.hints.event.online_url'), wrapper_html: { class: 'required' }

  - languages = I18nData.languages(I18n.locale).map { |k, v| [v.split(/[,;]/)[0], k] }
  = f.input :language_code, collection: languages, selected: @record.default_language_code.upcase, input_html: { class: 'search' }, hint: translate('cms.hints.event.language')

  = f.simple_fields_for :contact_info do |ff|
    .field
      = ff.label :phone_number, translate_attribute(@record, 'contact_info.phone_number')
      .two.fields
        - fields = { phone_number: :tel, phone_name: :string }
        - fields.each do |field, type|
          = ff.input field, as: type, label: false, hint: translate("cms.hints.event.contact_info.#{field}"), placeholder: translate_attribute(@record, "contact_info.#{field}"), input_html: { value: @record.contact_info[field.to_s] }

  - unless @record.online? || @record.inactive_category?
    .ui.small.dividing.violet.header = translate('cms.forms.event.location')
    = render 'cms/venues/selector', f: f, venue: @record.venue
    = f.input :room, hint: translate('cms.hints.event.room')

  = render "cms/fields/categories/#{@record.category}", f: f

  .ui.small.dividing.violet.header = translate('cms.forms.event.manager')
  - if allow.set_manager?
    = render 'cms/managers/selector', f: f, manager: @record.manager
  - elsif @record.manager.present?
    .ui.fluid.horizontal.card
      .content
        .header = @record.manager.name
        .meta = [@record.manager.email, @record.manager.phone].compact.join(' â€¢ ')
    
  - periods = [3, 6, 9].map { |v| [v.months.inspect, v] }
  = f.input :expiration_period, collection: periods, selected: @record.expiration_period, hint: translate('cms.hints.event.expiration_period')
    
  .ui.hidden.section.divider
- else
  .ui.tiny.compact.buttons
    a.ui.button href=("?online=false" if @record.online?) class=(@record.online? ? 'basic' : 'primary')
      = translate_model(OfflineEvent)
    a.ui.button href=("?online=true" unless @record.online?) class=(!@record.online? ? 'basic' : 'primary')
      = translate_model(OnlineEvent)

  = help_link :categories
  br
  table.ui.very.basic.table
    tbody
      - Event.categories.each do |category, index|
        - next if (category == 'festival' || category == 'inactive') && @record.online?
        tr id="category-#{category}" class=('disabled' if category == 'festival' && @record.online?)
          td.center.aligned
            i.huge.fitted.icon class=event_category_icon(category)
          td
            strong = I18n.translate(category, scope: 'activerecord.attributes.event.categories')
            div = I18n.translate(category, scope: 'activerecord.attributes.event.category_descriptions')
          td
            a.ui.basic.primary.button href="?category=#{category}&online=#{@record.online?}"
              = translate('cms.actions.simple.select')
  br
