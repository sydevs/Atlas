
- allow = @context ? policy(@context) : policy(:worldwide)

h2.ui.header
  - unless %w[edit new].include?(action_name)
    - if allow.destroy?
      = floating_action translate('cms.actions.simple.destroy'), 'trash', url_for([:cms, @context]), data: { method: 'DELETE', confirm: translate('cms.messages.confirm_destroy') }
    - if allow.edit?
      = floating_action translate('cms.actions.simple.edit'), 'edit', url_for([:edit, :cms, @context])
    - if @context.respond_to?(:published) && !@context.published
      - text = translate('cms.details.record_not_published.title', resource: translate_model(@context.class))
      - tooltip = translate('cms.details.record_not_published.description', resource: translate_model(@context.class).downcase)
      = floating_action text, 'exclamation', class: 'active yellow', data: { tooltip: tooltip, position: 'bottom center' }
    - elsif @context.try(:expired?)
      - text = translate('cms.details.record_expired.title', resource: translate_model(@context.class))
      - tooltip = translate('cms.details.record_expired.description', resource: translate_model(@context.class).downcase, weeks: Expirable::EXPIRE_AFTER_WEEKS)
      = floating_action text, 'exclamation', class: 'active orange', data: { tooltip: tooltip, position: 'bottom center' }
  .content = @context&.label || translate('cms.menu.worldwide_data')
  - if @context
    .sub.header
      - if @context.parent.present?
        = translate('cms.menu.context', resource: translate_model(@context.class), parent: @context.parent.label)
      - else
        = translate_model(@context.class)

- if %w[edit new].include?(action_name)
  .ui.divider
- else
  .ui.stackable.secondary.pointing.menu
    = menu_item translate('cms.menu.details'), @context, action: 'show'
    = menu_item translate_model(Picture, :plural), @context, index: 'pictures' if allow.index_association?(:pictures)
    = menu_item translate('cms.menu.regions'), @context, index: 'regions' if allow.index_association?(:regions)
    = menu_item translate_model(Manager, :plural), @context, index: 'managers' if allow.index_association?(:managers)
    = menu_item translate_model(Venue, :plural), @context, index: 'venues' if allow.index_association?(:venues)
    = menu_item translate_model(Event, :plural), @context, index: 'events' if allow.index_association?(:events)
    = menu_item translate_model(Registration, :plural), @context, index: 'registrations' if allow.index_association?(:registrations)
    = menu_item translate_model(Audit, :plural), @context, index: 'audits' if allow.index_association?(:audits)
    = menu_item translate('cms.menu.activity'), @context, index: 'activity' if allow.try(:view_activity?)

.ui.basic.segment
  - flash.each do |key, message|
    .ui.message class=key
      = message

  = yield
