
- content_for :title, translate('cms.actions.target.edit', resource: translate_model(@model))

= render 'cms/views/context' do
  - if @record.try(:should_finish?)
    .ui.small.icon.message
      i.check.circle.icon
      .content
        .header = translate('cms.details.record_finished.title', resource: translate_model(@model))
        .description = translate('cms.details.record_finished.description', resource: translate_model(@model).downcase, date: @record.last_recurrence_at.to_s(:long))
  - elsif @record.try(:archived?)
    .ui.small.orange.icon.message
      i.exclamation.icon
      .content
        .header = translate('cms.details.record_archived.title', resource: translate_model(@model))
        .description = translate('cms.details.record_archived.alt_description', resource: translate_model(@model).downcase, time: time_ago_in_words(@record.updated_at))
  - elsif @record.try(:expired?)
    .ui.small.orange.icon.message
      i.exclamation.icon
      .content
        .header = translate('cms.details.record_expired.title', resource: translate_model(@model))
        .description = translate('cms.details.record_expired.alt_description', resource: translate_model(@model).downcase, updated_ago: time_ago_in_words(@record.updated_at))
  - elsif @record.try(:needs_review?)
    .ui.small.yellow.icon.message
      i.exclamation.icon
      .content
        .header = translate('cms.details.record_needs_review.title', resource: translate_model(@model))
        .description = translate('cms.details.record_needs_review.alt_description', resource: translate_model(@model).downcase, updated_ago: time_ago_in_words(@record.updated_at))

  = simple_form_for [:cms, @record], html: { id: 'page-form', class: "#{'error' if @record.errors.present?}", novalidate: true, autocomplete: 'off' } do |f|
    h3.ui.header = translate('cms.actions.target.edit', resource: translate_model(@model))

    - if @record.errors.present?
      .ui.error.message
        .header = translate('cms.messages.errors')
        ul.list
          - @record.errors.full_messages.each do |message|
            li = message

    = render "cms/fields/#{@model_name.singular_route_key}", f: f

    p
      a.ui.basic.button href=(@record == current_user ? cms_root_url : back_path)
        i.left.arrow.icon
        = translate('cms.actions.simple.back')

      button.ui.basic.positive.button = translate('cms.actions.simple.update')
