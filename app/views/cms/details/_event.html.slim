
- if @record.published? && @record.venue.published?
  - unless @record.finished?
    - if @record.archived?
      .ui.small.orange.icon.message
        i.exclamation.icon
        .content
          a.ui.right.floated.orange.button href=url_for([:edit, :cms, @record])
            = translate('cms.details.record_archived.action')
            i.right.arrow.icon
          .header = translate('cms.details.record_archived.title', resource: translate_model(@model))
          .description = translate('cms.details.record_archived.description', resource: translate_model(@model).downcase, time: time_ago_in_words(@record.updated_at))
    - elsif @record.expired?
      .ui.small.orange.icon.message
        i.exclamation.icon
        .content
          a.ui.right.floated.orange.button href=url_for([:edit, :cms, @record])
            = translate('cms.details.record_expired.action')
            i.right.arrow.icon
          .header = translate('cms.details.record_expired.title', resource: translate_model(@model))
          .description = translate('cms.details.record_expired.description', resource: translate_model(@model).downcase, weeks: Expirable::EXPIRE_AFTER_WEEKS)
    - elsif @record.needs_review?
      .ui.small.yellow.icon.message
        i.exclamation.icon
        .content
          a.ui.right.floated.yellow.button href=url_for([:edit, :cms, @record])
            = translate('cms.details.record_needs_review.action')
            i.right.arrow.icon
          .header = translate('cms.details.record_needs_review.title', resource: translate_model(@model))
          .description = translate('cms.details.record_needs_review.description', resource: translate_model(@model).downcase, weeks: Expirable::VERIFY_AFTER_WEEKS, date: @record.expires_at.to_s(:short))

- unless @record.native_registration_mode?
  .ui.small.yellow.icon.message
    i.exclamation.icon
    .content
      .header = translate('cms.details.external_registration.title')
      .description = translate('cms.details.external_registration.description', mode: translate_enum_value(@record, :registration_mode))
  = help_link :registration

h3.ui.small.dividing.grey.header = translate('cms.details.details_for_record', resource: @record.label)
p = simple_format @record.description
.ui.list
  .item
    i.hashtag.icon
    .content
      .header = @record.category_name
      .description = @record.category_description
  .item
    i.calendar.icon
    .content
      .header = translate('cms.details.dates_and_timing')
      .description #{@record.formatted_start_end_date}, #{@record.timing_in_words}
  .item
    i.language.icon
    .content
      .header = translate_attribute(Event, :language_code)
      .description = @record.language_name

h3.ui.small.dividing.grey.header = translate('cms.details.management_for_record', resource: translate_model(@model).downcase)
- if @record.finished?
  .ui.one.steps
    .step
      i.blue.check.circle.icon
      .content
        .title = translate('cms.details.record_finished.title', resource: translate_model(Event))
        .description = translate('cms.details.record_finished.description', resource: translate_model(Event).downcase, date: @record.end_date.to_s(:long))
- elsif @record.published? && @record.venue.published?
  .ui.three.event.steps
    - %w[updated needs_review expired].each do |step|
      - active = @record.send("#{step}?")
      .step class=('disabled' unless active)
        i.icon class=translate("cms.help.expiration.steps.#{step}.icon") class=('grey disabled' unless active)
        .content
          .title = translate(active ? :active_label : :inactive_label, scope: "cms.help.expiration.steps.#{step}")
          .description = @record.send("#{step}_at").strftime('%-d %b %Y')
  = help_link :expiration, (translate("cms.help.expiration.alt_title") unless @record.expired?)

.ui.list
  - if !@record.published? || !@record.venue.published?
    .item
      i.warning.sign.icon
      .content
        .header = translate('cms.details.record_not_published.title', resource: translate_model(@model))
        - if !@record.published?
          .description = translate('cms.details.record_not_published.description', resource: translate_model(@model).downcase)
        - else
          .description = translate('cms.details.record_not_published.parent', resource: translate_model(@model).downcase, parent: translate_model(@record.parent.class).downcase)
  - if @record.manager.present?
    .item
      = model_icon Manager
      .content
        .header = translate_model(Manager)
        a.description href=url_for([:cms, @record.manager])
          | #{@record.manager.label} (#{@record.manager.email})
  .item
    i.clock.icon
    .content
      .header = translate('cms.details.updated_at')
      .description = time_ago_in_words(@record.updated_at)

h3.ui.small.dividing.grey.header = translate('cms.details.location_of_record', resource: translate_model(@model).downcase)
= hidden_field_tag :venue_address, @record.venue.address
= hidden_field_tag :venue_latitude, @record.venue.latitude
= hidden_field_tag :venue_longitude, @record.venue.longitude
= hidden_field_tag :venue_place_id, @record.venue.place_id
#venue-map data-latitude=@record.venue.latitude data-longitude=@record.venue.longitude

.ui.list
  .item
    i.building.icon
    .content
      .header = translate_attribute(Event, :building)
      .description = [@record.venue.name, @record.room].compact.join(', ')
  .item
    i.map.marked.alternate.icon
    .content
      .header = translate_attribute(Venue, :address)
      .description = @record.address

h3.ui.small.dividing.grey.header = translate('cms.details.registration_for_record', resource: @record.label)
.ct-chart.ct-minor-seventh id='chart' data-plot=@registrations_data.to_json