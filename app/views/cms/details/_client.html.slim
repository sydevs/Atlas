
h3.ui.small.dividing.grey.header
  = translate_attribute(Client, :embed_type)
  ' : 
  = translate_enum_value(@record, :embed_type)
.ui.fluid.code.input
  - case @record.embed_type
    - when 'script'
      textarea onclick="this.select()"
        = "<script id=\"sahajatlas\" src=\"#{map_embed_url(format: :js, key: @record.public_key)}\" />"
    - when 'iframe'
      textarea onclick="this.select()"
        = "<iframe src=\"#{@record.embed_url}\" width=\"100%\" border=\"0\"></iframe>"
    - when 'link'
      input type="text" value="#{@record.url}?key=#{@record.public_key}" onclick="this.select()"

h3.ui.small.dividing.grey.header = translate_attribute(Client, :config)
.ui.list
  - if @record.location.present?
    .item
      = model_icon @record.location_type.constantize
      .content
        .header = translate_attribute(Client, :location)
        a.description href=url_for([:cms, @record.location])
          = @record.location.label
          '  
          i.small.right.arrow.icon
  - if @record.domain
    .item
      i.linkify.icon
      .content
        .header = translate_attribute(Client, :domain)
        a.description href=@record.url target="_blank"
          = @record.domain
          '  
          i.small.right.arrow.icon
  ruby: 
    config = {
      embed_type: 'vector square',
      routing_type: 'bezier curve',
      default_view: 'tablet alternate',
    }
  - config.map do |field, icon|
    - value = @record.send(field)
    - unless value.nil? || @model.send(field.to_s.pluralize)[value].zero?
      .item
        i.icon class=icon
        .content
          .header = translate_attribute(Client, field)
          .description = translate_enum_value(Client, field.to_s.pluralize, value)

h3.ui.small.dividing.grey.header = translate('cms.details.management_for_record', resource: translate_model(@model).downcase)
.ui.list
  .item
    = model_icon Manager
    .content
      .header = translate_model(Manager)
      a.description href=url_for([:cms, @record.manager])
        | #{@record.manager.label} (#{@record.manager.email})
        '  
        i.small.right.arrow.icon
  .item
    i.clock.icon
    .content
      .header = translate('cms.details.updated_at')
      .description = time_ago_in_words(@record.updated_at)
  .item
    i.key.icon
    .content
      .header = translate_attribute(Client, :last_accessed_at)
      .description = @record.last_accessed_at ? time_ago_in_words(@record.last_accessed_at) : translate('cms.hints.never')
  .item
    i.palette.icon
    .content
      .header = translate('cms.hints.client.colors')
      .description
        - %i[primary_color secondary_color tertiary_color].each do |field|
          .ui.circular.label style="background-color: #{@record.send(field)}"
