
- if policy(@record).new_association?(:events)
  .ui.small.icon.message
    i.question.icon
    .content
      a.ui.right.floated.button href=url_for([:new, :cms, @record, :event])
        = translate('cms.details.create_event_on_venue.action')
        i.right.arrow.icon
      .header = translate('cms.details.create_event_on_venue.title')
      .description = translate('cms.details.create_event_on_venue.description', action: translate_model(Event))

h3.ui.small.dividing.grey.header = translate('cms.details.details_for_record', resource: @record.label)
.ui.list
  - unless @record.published?
    .item
      i.warning.sign.icon
      .content
        .header = translate('cms.details.record_not_published.title', resource: translate_model(@model))
        .description = translate('cms.details.record_not_published.description', resource: translate_model(@model).downcase)
  .item
    = model_icon Event
    .content
      .header = translate('cms.details.event_coverage.title')
      .description = translate_model_count(@record.events)

h3.ui.small.dividing.grey.header = translate('cms.details.location_of_record', resource: translate_model(@model).downcase)
p = @record.address

= hidden_field_tag :venue_address, @record.address
= hidden_field_tag :venue_latitude, @record.latitude
= hidden_field_tag :venue_longitude, @record.longitude
= hidden_field_tag :venue_place_id, @record.place_id
#map data-latitude=@record.latitude data-longitude=@record.longitude
